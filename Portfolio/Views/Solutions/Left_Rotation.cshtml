<br />
@{
    ViewBag.Title = "Left_Rotation";
    Layout = "~/Views/Shared/_SolutionsLayout.cshtml";
}
<div class="row">
    <p>
        A left rotation operation on an array of size n shifts each of the array's elements 1 unit to the left. For example, if 2<br />
        left rotations are performed on array [1,2,3,4,5] , then the array would become [3,4,5,1,2].<br /><br />

        Given an array of n integers and a number, d, perform d left rotations on the array. Then print the updated array as a <br />
        single line of space-separated integers.<br />
        <br />
        <b>Input Format</b><br />

        The first line contains two space-separated integers denoting the respective values of n (the number of integers)<br />
        and d (the number of left rotations you must perform).<br />
        The second line contains n space-separated integers describing the respective elements of the array's initial state.<br />
        <br />
        <b>Constraints</b><br />
        <ul>
            <li>
                <b>1<=n<=10^5</b>
            </li>

            <li>
                <b>1<=d<=n</b>
            </li>
            <li>
                <b>1<=a[i]<=10^6</b>
            </li>
        </ul>
        <b>Output Format</b><br />
        Print a single line of n space-separated integers denoting the final state of the array after performing d left<br />
        rotations.<br />
        <b>Sample Input</b><br />
        <pre>
            5 4
            1 2 3 4 5
        </pre>
        <b>Sample Output</b><br />
        <pre>
           5 1 2 3 4
        </pre>
        <b>Explanation</b><br />
        When we perform  left rotations, the array undergoes the following sequence of changes:<br />
        <b>[1,2,3,4,5]-->[2,3,4,5,1]-->[3,4,5,1,2]-->[4,5,1,2,3]-->[5,1,2,3,4]</b><br />
        Thus, we print the array's final state as a single line of space-separated values, which is 5 1 2 3 4.<br />
    </p>
</div>
<div class="row">
    <pre>
    using System;
    using System.Collections.Generic;
    using System.IO;
    class Solution {
    static void Main(String[] args) {
        string[] input = Console.ReadLine().Trim().Split(' ');
        int[] arr = Array.ConvertAll(input, int.Parse);
        int N = arr[0];
        int d = arr[1];
        int[] initialArr = new int[N];
        string[] newarr = new string[N];
        int[] finalArr = new int[N];
        newarr = Console.ReadLine().Trim().Split(' ');
        initialArr = Array.ConvertAll(newarr,int.Parse);
        
        for(int i=0;i&lt;N;i++) {
            if(i&lt;d)
            {
                finalArr[N-d+i] = initialArr[i];
            }
            else
            {
                finalArr[i-d] = initialArr[i];;
            }
        }
        for(int i=0;i&lt;N;i++)
        {
            if(i==(N-1))
            {
                Console.Write(finalArr[i]);
            }
            else
            {
                Console.Write(finalArr[i].ToString()+" ");
            }

        }
    }
}
    </pre>
</div>

